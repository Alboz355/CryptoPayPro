# Placez ce fichier √† la racine de votre projet sous le nom : codemagic.yaml

workflows:
  ios-app-build:
    name: Construire l'application iOS
    # --- Configuration de la machine virtuelle (un Mac) ---
    environment:
      node: 20
      xcode: latest
      cocoapods: default
    # --- Scripts √† ex√©cuter ---
    scripts:
      - name: Installer les d√©pendances du projet
        script: npm install

      - name: Construire la version web de l'application
        script: npm run build

      - name: Int√©grer Capacitor pour cr√©er le projet iOS
        script: |
          npm install @capacitor/core @capacitor/cli
          # Remplacez "out" par ".next" si votre dossier de build est diff√©rent
          npx cap init "CryptoPayPro" "com.cryptopaypro.app" --web-dir "out"
          npx cap add ios

      - name: Installer les d√©pendances natives (pods)
        script: |
          cd ios/App && pod install

      - name: üö® √âTAPE DE SIGNATURE (BLOQUANTE SANS COMPTE PAYANT) üö®
        script: |
          # Cette √©tape initialise le "keychain" de macOS sur le serveur distant.
          keychain initialize
          
          # Ici, Codemagic essaie de r√©cup√©rer les fichiers .p12 et .mobileprovision
          # que vous √™tes cens√© avoir upload√©s dans leurs param√®tres.
          # Ces fichiers ne peuvent √™tre obtenus qu'avec un compte d√©veloppeur PAYANT.
          # SANS CES FICHIERS, LA SUITE √âCHOUERA.
          keychain add-certificates --certificate "$CM_CERTIFICATE" --certificate-password "$CM_CERTIFICATE_PASSWORD"
          xcode-project use-profiles

      - name: Construire le fichier .ipa
        script: |
          xcode-project build-ipa \
            --workspace "ios/App/App.xcworkspace" \
            --scheme "App"
          
    # --- O√π trouver le fichier .ipa une fois la construction termin√©e ---
    artifacts:
      - build/ios/ipa/*.ipa
